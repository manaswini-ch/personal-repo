/sequential query
{
 "query_template_group": "ingestion_templates|artifact_ingestion",
 "query_template_name": "recon_query_fetch",
 "query_output_key": "recon_query_fetch",
 "query_type":"select"
},
{
 "query_template_group": "ingestion_templates|artifact_ingestion",
 "query_template_name": "source_cred_fetch",
 "query_output_key": "source_cred_fetch",
 "query_type":"json"
}

/Fetch recon sql query from table
recon_query_fetch(templateData)::=<<
select query from nabu.recon_mapping
where table_id = $templateData.input_data.table_id$
>>

/Get credentials from Ldap source
source_cred_fetch(templateData)::=<<
import com.modak.common.token.Token.Ldap
{"User" : "abc", "Paww" : "pass"}

/Insert this template in DBOps bot output_message_templates to call scriptbot
{
"template_group": "ingestion_flow|artifact_ingestion",
"template_name": "recon_api_script",
"useIncomingData":true
}

/Call spark script bot to call REST API script
recon_api_script(templateData,message_id,bot_id,parent_task_start_ts,parent_task_end_ts,parent_metadata,parent_bot_name,parent_task_name,dataAsMap)::=<<
{
  "bot_name": "SparkScriptBot",
  "bot_metadata": {
    $common_metadata(message_id,bot_id,parent_metadata.message_id,parent_metadata.workflow_route_bot_topic_details.SparkScriptBot,parent_metadata)$,
    "tags": {$common_tags(parent_metadata,"KoshBot")$,"task_dependency":true},
    "task_retry_intervals_secs": $retry_intervals()$,
    "message_context": "run_command_to_run_recon_api_job"
  },
    "bot_tasks": [
    {
      "task_name": "run_command_to_run_recon_api_job",
      "data_processor": {
        "classname": "com.modak.bots.processor.NullProcessor",
        "props": {}
      },
      "pre_task_logging_template_details": {
          "template_group": "common_templates|artifact_parallel_ingestion",
          "template_name": "pre_log_template"
      },
      "app_template_details": {
        "template_group": "ingestion_templates|artifact_parallel_ingestion",
        "template_name": "command_to_run_recon_script"
      },
      "input_data": {
              "data": $templateData$,
			  "recon_sql" : "dataAsMap.query_input.table_metadata_output).recon_query_fetch",
			  "destination_path": "abfss://$first(dataAsMap.query_input.table_metadata_output).adls_gen2_container$/$first(dataAsMap.query_input.table_metadata_output).upper_case_destination_table_name$/$first(dataAsMap.query_input.table_metadata_output).destination_folder_format$",
			  "source_details": "dataAsMap.query_input.table_metadata_output).source_cred_fetch"
       },
      "output_message_templates": [
        {
          "template_group": "common_templates|artifact_parallel_ingestion",
          "template_name": "task_status_success_msg"
        }
      ],
      "error_message_templates": [
        {
          "template_group": "common_templates|artifact_parallel_ingestion",
          "template_name": "error_template_create_msg"
        }
      ]
    }
  ]
}
>>

/Call REST API
command_to_run_recon_script(templateData)::=<<
["bash","-l","-c","\$NABU_ROOT_INSTALLATION/botworks/scripts/curation/recon_api_call.sh $templateData.recon_sql$ $templateData.source_details$ $templateData.destination_path$ ]
>>