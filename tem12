[2023-03-30 11:38:05,393] 	 ERROR:[+] JOB ID is : 233414201670402 and RUN ID is : 34427861 stderr message is b''{\n  "metadata": {\n    "job_id": 233414201670402,\n    "run_id": 34427861,\n    "creator_user_name": "mchinthalapudi@humana.com",\n    "number_in_job": 34427861,\n    "original_attempt_run_id": 34427861,\n    "state": {\n      "life_cycle_state": "TERMINATED",\n      "result_state": "FAILED",\n      "state_message": "",\n      "user_cancelled_or_timedout": false\n    },\n    "task": {\n      "spark_jar_task": {\n        "jar_uri": "",\n        "main_class_name": "com.modak.BootstrapIngestion",\n        "parameters": [\n          "",\n          "ewoicHJvY2Vzc0lkIjoxNjgwMTc2MDQzMTQwMSwKImRhdGFwbGFjZUlkIjo2LAoidGFibGVJZCI6MiwKImRhdGFtb3ZlbWVudElkIjoyMSwKImpvYlNjaGVkdWxlZFVzZXJJZCI6Im5hYnVhZG1pbiIsCiJqb2JTY2hlZHVsZUlkIjoyMjksCiJiYXRjaElkIjoxNjgwMTc2MDQwMDMzMDY4MCwKImxhc3RSdW5UaW1lc3RhbXAiOiIwMDAxLTAxLTAxIDAwOjAwOjAwLjEwMyIKfQ==",\n          "ewoiZXh0cmFDb25maWdNYXAiOiB7InNwYXJrLm5hYnUuZmV0Y2hfc2l6ZSI6ICIxMDAwMCIsICJzcGFyay5uYWJ1LmNvbXB1dGVfZW5naW5lIjogImF6dXJlX2RhdGFicmlja3MiLCAic3BhcmsubmFidS5zb2xyX2JhdGNoX3NpemUiOiAiMTAwMDAiLCAic3BhcmsubmFidS5hcHBsaWNhdGlvbl9uYW1lIjogIm5hYnUtc3Bhcmtib3QtaW5nZXN0aW9uIiwgInNwYXJrLmRyaXZlci5uYWJ1X3ByaXZhdGVLZXkiOiAiL2RiZnMvdG1wL25hYnUvMTY4MDE3NjA0MzE0MDEvMC9wcml2YXRlS2V5IiwgInNwYXJrLmRyaXZlci5zb3VyY2VfYXdzX2VuZFBvaW50IjogIiIsICJzcGFyay5kcml2ZXIudGFyZ2V0X2F3c19lbmRQb2ludCI6ICIiLCAic3BhcmsubmFidS5jb21wdXRlX2VuZ2luZV9saWJzX3BhdGgiOiAiL2RiZnMvdG1wL25hYnUvMTY4MDE3NjA0MzE0MDEvMC9hcHBsaWNhdGlvbi5jb25mIn0KfQ=="\n        ],\n        "run_as_repl": true\n      }\n    },\n    "cluster_spec": {\n      "existing_cluster_id": "0328-121854-q1zz05xk",\n      "libraries": [\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/nabu-sparkbot-reflection-code-execution-v0.3.12-3.2.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/hive-jdbc-1.0.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/carolina-jdbc-2.4.4.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/ojdbc6-11.2.0.4.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/mssql-jdbc-8.2.0.jre8.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/aws-java-sdk-1.11.163.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/almaren-framework_2.12-0.9.4-3.2.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/jdbcparallel-almaren_2.12-0.0.4-3.2.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/postgresql-42.2.8.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/mysql-connector-java-8.0.29.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/jtds-1.3.1.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/spark-bigquery-with-dependencies_2.12-0.24.2.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/redshift-jdbc42-2.1.0.1.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/snowflake-jdbc-3.13.10.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/ngdbc-2.11.17.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/mongo-spark-connector-10.0.5.jar"\n        },\n        {\n          "jar": "dbfs:/tmp/nabu-spark-bot-ingestion-dependency-jars-3-2/vertica-jdbc-12.0.2-0.jar"\n        }\n      ]\n    },\n    "cluster_instance": {\n      "cluster_id": "0328-121854-q1zz05xk",\n      "spark_context_id": "434251186302522556"\n    },\n    "start_time": 1680176153783,\n    "setup_duration": 56000,\n    "execution_duration": 53000,\n    "cleanup_duration": 0,\n    "end_time": 1680176263110,\n    "trigger": "ONE_TIME",\n    "run_name": "nabu-sparkbot-ingestion-16801760431401-0",\n    "run_page_url": "https://adb-6535046831959952.12.azuredatabricks.net/?o=6535046831959952#job/233414201670402/run/34427861",\n    "run_type": "JOB_RUN",\n    "attempt_number": 0,\n    "format": "SINGLE_TASK"\n  },\n  "error": "NoSuchElementException: spark.driver.nabu_inputjson",\n  "error_trace": "at org.apache.spark.sql.errors.QueryExecutionErrors$.noSuchElementExceptionError(QueryExecutionErrors.scala:2281)\\n\\tat org.apache.spark.sql.internal.SQLConf.$anonfun$getConfString$4(SQLConf.scala:5289)\\n\\tat scala.Option.getOrElse(Option.scala:189)\\n\\tat org.apache.spark.sql.internal.SQLConf.$anonfun$getConfString$1(SQLConf.scala:5289)\\n\\tat com.databricks.spark.DatabricksSparkConf$AioaLazyConfigConf$.recordStringConfigAccessDuringWarmUp(DatabricksSparkConf.scala:1133)\\n\\tat org.apache.spark.sql.internal.SQLConf.getConfString(SQLConf.scala:5289)\\n\\tat org.apache.spark.sql.RuntimeConfig.get(RuntimeConfig.scala:88)\\n\\tat com.modak.common.token.Token$.inputJson$lzycompute(Token.scala:23)\\n\\tat com.modak.common.token.Token$.inputJson(Token.scala:23)\\n\\tat com.modak.common.token.Token$.parsedInputJson$lzycompute(Token.scala:24)\\n\\tat com.modak.common.token.Token$.parsedInputJson(Token.scala:24)\\n\\tat com.modak.BootstrapIngestion$.main(BootstrapIngestion.scala:18)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(command--1:1)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw$$iw$$iw$$iw$$iw.<init>(command--1:43)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw$$iw$$iw$$iw.<init>(command--1:45)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw$$iw$$iw.<init>(command--1:47)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw$$iw.<init>(command--1:49)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$$iw.<init>(command--1:51)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read.<init>(command--1:53)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$.<init>(command--1:57)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$read$.<clinit>(command--1)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$eval$.$print$lzycompute(<notebook>:7)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$eval$.$print(<notebook>:6)\\n\\tat $linebb3948bb65d24aedb763e3e958e6313125.$eval.$print(<notebook>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:747)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1020)\\n\\tat scala.tools.nsc.interpreter.IMain.$anonfun$interpret$1(IMain.scala:568)\\n\\tat scala.reflect.internal.util.ScalaClassLoader.asContext(ScalaClassLoader.scala:36)\\n\\tat scala.reflect.internal.util.ScalaClassLoader.asContext$(ScalaClassLoader.scala:116)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:41)\\n\\tat scala.tools.nsc.interpreter.IMain.loadAndRunReq$1(IMain.scala:567)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:594)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:564)\\n\\tat com.databricks.backend.daemon.driver.DriverILoop.execute(DriverILoop.scala:223)\\n\\tat com.databricks.backend.daemon.driver.ScalaDriverLocal.$anonfun$repl$1(ScalaDriverLocal.scala:227)\\n\\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExitInternal$.trapExit(DriverLocal.scala:1259)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExit$.apply(DriverLocal.scala:1212)\\n\\tat com.databricks.backend.daemon.driver.ScalaDriverLocal.repl(ScalaDriverLocal.scala:227)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$23(DriverLocal.scala:868)\\n\\tat com.databricks.unity.EmptyHandle$.runWith(UCSHandle.scala:124)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$20(DriverLocal.scala:851)\\n\\tat com.databricks.logging.UsageLogging.$anonfun$withAttributionContext$1(UsageLogging.scala:407)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\\n\\tat com.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:158)\\n\\tat com.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:405)\\n\\tat com.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:402)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:69)\\n\\tat com.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:450)\\n\\tat com.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:435)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:69)\\n\\tat com.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:828)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.$anonfun$tryExecutingCommand$1(DriverWrapper.scala:660)\\n\\tat scala.util.Try$.apply(Try.scala:213)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.tryExecutingCommand(DriverWrapper.scala:652)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.executeCommandAndGetError(DriverWrapper.scala:571)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.executeCommand(DriverWrapper.scala:606)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.runInnerLoop(DriverWrapper.scala:448)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.runInner(DriverWrapper.scala:389)\\n\\tat com.databricks.backend.daemon.driver.DriverWrapper.run(DriverWrapper.scala:247)\\n\\tat java.lang.Thread.run(Thread.java:750)"\n}\n''
